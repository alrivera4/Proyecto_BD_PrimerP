# -*- coding: utf-8 -*-
"""Aportacion

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GA4AKuUFmn4bJrm_IYYANBSH9ROOjslf

**Proyecto Final: Unidad 1**

**Entidad: hijo**
"""

#Faker es un paquete de Python que genera datos falsos.
!pip install Faker

"""DATOS SINTETICOS DE LA ENTIDAD PROVEE

Antes de iniciar cualquier codificacion se comenzara cargando las bibliiotecas con las cuales se crearan los datos
"""

#Librerías necesarias para lageneracion de datos
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Librerías para generar cadena de números
import string
import random as r
from random import seed
from datetime import datetime

#Variable asignada para el tamaño del conjunto de datos
num_iess = 10000

"""     - id_aportacion: una cadena única de caracteres para identificar la aportacion
     - fecha_aportacion: formato de cadena de año-mes-día
     - no_aportacion: numero aleatorio de la cantidad de aportaciones realizadas por la persona
     - detalle_aportacion: descripcion de el fin que tiene la aportacion
     - monto_aportacion: cantidad de dinero aportado al IESS
     - ci_persona: una cadena de números para identificar a una persona ene ste caso de nacionalidad ecuatoriana


"""

#Lista con los atributos
features = [
    "id_aportacion",
    "fecha_aportacion",
    "no_aportacion",
    "detalle_aportacion",
    "monto_aportacion",
    "ci_persona",
]#Creamos un dataframe para estos atributos
df = pd.DataFrame(columns=features)

"""**id_aportacion**"""

df['id_aportacion'] = [uuid.uuid4().hex for i in range(num_iess)]

"""Se usa la biblioteca uuid para generar una cadena aleatoria asignada a el atributo id_aportacion

UUID es utilizada para generar identificaciones únicas para cada empresa, para asegurarnos que de que los ids de las empresas no se repitan y eso probara con el comando a continuación
"""

print(df['id_aportacion'].nunique()==num_iess)

#Variable para los géneros para la creación de los nombres.
genero = ["female", "male"]

#Nombres.
df['genero']= random.choices(
    genero, 
    weights=(30,30), 
    k=num_iess)

"""**fecha_aportacion**"""

def fecha_aportacion(start, end, n):
    #Formato de marca de tiempo (año, mes, dia)
    frmt = "%Y-%m-%d"

    #Formateo de los dos períodos de tiempo.
    stime = datetime.strptime(start, frmt)
    etime = datetime.strptime(end, frmt)
    
    #Se crea el grupo para tiempos aleatorios.
    td = etime - stime
    
    #Se genera una lista con los tiempos aleatorios.
    times = [(random.random() * td + stime).strftime(frmt) for _ in range(n)]
    return times
df['fecha_aportacion'] = fecha_aportacion("2020-01-01", "2022-12-02", num_iess)

"""**no_aportacion**"""

aportacion=[]
#Cantidad de números para la cadena..
size = 2
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [1,2,3,4,5,6,7,8,9,0]
  aportacion=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.no_aportacion[i]=aportacion

"""**monto_aportacion**"""

aportacion=[]
#Cantidad de números para la cadena..
size = 3
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [1,2,3,4,5,6,7,8,9,0]
  aportacion=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.monto_aportacion[i]=aportacion

"""**detalle_aportacion**"""

#Variale tipo string junto con su longitud de cadena de caracteres.
bio=[]
length_of_string = 25
#Crea el detalle del rol.
for i in range(0, num_iess):
  random.seed(datetime.now())
  #La descripcion tiene todo tipo de caracteres.
  bio=(''.join(random.SystemRandom().choice(string.ascii_letters + string.digits) for i in range(length_of_string)))
  #Se guarda el detalle dle rol.
  df.detalle_aportacion[i] =bio

"""**ci_persona**"""

cedula=[]
#Cantidad de números para la cadena..
size = 10
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [0,1,2,3,4,5,6,7,8,9]
  cedula=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.ci_persona[i]=cedula

#Eliminar genero, no es necesaerio para esta entidad.
del(df['genero'])

#Visualizar en la tabla los datos generados antes de descargar el excel.
df.head(5)

#Generar excel de los datos.
df.to_csv('Aportacion.csv')