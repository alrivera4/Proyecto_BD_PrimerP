# -*- coding: utf-8 -*-
"""Provee

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tSYse85l4s-RRG_dooM4lWXd2zj_mF3_

**Proyecto Final: Unidad 1**

**Entidad: Provee**
"""

#Faker es un paquete de Python que genera datos falsos.
!pip install Faker

"""DATOS SINTETICOS DE LA ENTIDAD PROVEE

Antes de iniciar cualquier codificacion se comenzara cargando las bibliiotecas con las cuales se crearan los datos
"""

#Librerías necesarias para lageneracion de datos
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Librerías para generar cadena de números
import random as r
from random import seed
from datetime import datetime

#Variable asignada para el tamaño del conjunto de datos
num_iess = 10000

"""- ci_persona: una cadena de números para identificar a una persona ene ste caso de nacionalidad ecuatoriana
     - id_Empresa: una cadena única de caracteres para identificar a una empresa

Se ingresan los atributos como una lista para inicializar un marco de datos de Pandas:
"""

#Lista con los atributos
features = [
    "ci_persona",
    "id_Empresa",
]#Creamos un dataframe para estos atributos
df = pd.DataFrame(columns=features)

#Variable para los géneros para la creación de los nombres.
genero = ["female", "male"]

#Nombres.
df['genero']= random.choices(
    genero, 
    weights=(30,30), 
    k=num_iess)

cedula=[]
#Cantidad de números para la cadena..
size = 10
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [0,1,2,3,4,5,6,7,8,9]
  cedula=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.ci_persona[i]=cedula

#Eliminar genero, no es necesaerio para esta entidad.
del(df['genero'])

"""Se usa la biblioteca uuid para generar una cadena aleatoria asignada a el atributo id_Empresa"""

df['id_Empresa'] = [uuid.uuid4().hex for i in range(num_iess)]

"""UUID es utilizada para generar identificaciones únicas para cada empresa, para asegurarnos que de que los ids de las empresas no se repitan y eso probara con el comando a continuación"""

print(df['id_Empresa'].nunique()==num_iess)

#Visualizar en la tabla los datos generados antes de descargar el excel.
df.head(5)

#Generar excel de los datos.
df.to_csv('Provee.csv')