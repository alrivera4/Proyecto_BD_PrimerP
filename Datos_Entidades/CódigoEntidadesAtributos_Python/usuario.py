# -*- coding: utf-8 -*-
"""Usuario.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11dzurpUmpiiDYLwgN4NQywfnuLXQ8a1_

**Proyecto Final: Unidad 1**

**Entidad: usuario**
"""

#Faker es un paquete de Python que genera datos falsos.
!pip install Faker

#Librerías necesarias para la generación de datos.
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Librerías para generar cadena de numeros
import random as r
from random import seed
from datetime import datetime

#Variable asignada para el tamaño del conjunto de datos. 
num_iess = 10000

#Lista de 4 características (Atributos)
features = [
    "id_usuario",
     #Genero no es un atributo.
    "genero",
    "nombre_usuario",
    "contrasenia_usuario",
    "ci_persona",
]# Creando un DF para estas características
df = pd.DataFrame(columns=features)

"""**id_usuario**"""

#Biblioteca uuid para generar cadena aleatoria de datos para id_perfil.
df['id_usuario'] = [uuid.uuid4().hex for i in range(num_iess)]

#Genera identificaciones únicas para cada usuario. Si todas las ID en el conjunto de datos son únicas, devuelve True.
print(df['id_usuario'].nunique()==num_iess)

"""**nombre_usuario**"""

#Variable para los géneros para la creación de los nombres.
genero = ["female", "male"]

#Nombres.
df['genero']= random.choices(
    genero, 
    weights=(30,30), 
    k=num_iess)

#Instancia Faker
faker = Faker()
#Función.
def name_gen(genero):
    #Para masculino
    if genero=='male':
        return faker.name_male()
    #Para femenino
    elif genero=='female':
        return faker.name_female()
    #Genera los nombres
    return faker.name()
df['nombre_usuario'] = [name_gen(i) for i in df['genero']]

"""**contrasenia_usuario**"""

#Uso de la biblioteca uuid para generar cadena aleatoria de datos para la clave o contraseña.
df['contrasenia_usuario'] = [uuid.uuid4().hex for i in range(num_iess)]

#Genera identificaciones únicas para cada usuario. Si todas las claves en el conjunto de datos son únicas, devuelve True.
print(df['contrasenia_usuario'].nunique()==num_iess)

"""**ci_persona**"""

cedula=[]
#Cantidad de números para la cadena..
size = 10
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [0,1,2,3,4,5,6,7,8,9]
  cedula=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.ci_persona[i]=cedula

#Eliminar genero, no es necesaerio para esta entidad.
del(df['genero'])

#Visualizar en la tabla los datos generados antes de descargar el excel.
df.head(5)

#Generar excel de los datos.
df.to_csv('usuario.csv')